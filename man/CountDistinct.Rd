% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/count.R
\name{CountDistinct}
\alias{CountDistinct}
\title{Count Distinct Combinations}
\usage{
CountDistinct(data, inputs, outputs = count)
}
\arguments{
\item{data}{A \code{\link{waypoint}} object.}

\item{inputs}{The expressions whose distinct combinations are counted.}

\item{outputs}{The column name of the result.}
}
\value{
A \code{\link{waypoint}} containing a single row and column whose
  name is given by \code{output}.
}
\description{
Counts the number of distinct combinations for the given expressions.
}
\details{
This GLA counts the number of distinct combinations of the given inputs
using a full hashing of the distinct combinations. As such, it requires
\eqn{O(k)} space, where \eqn{k} is the number of distinct combinations. The
run time is \eqn{O(n + k)}, where \eqn{n} is the number of rows in
\code{data}. The second term is a result of having to merge hashes between
different states. Having a large number of distinct values leads to
significant slowdown because of this; the \code{\link{BloomFilter}} is
recommended for these queries.
}
\examples{
## result is equal to total number of tuples, no repitiions
data <- Read(lineitem100g)
agg <- CountDistinct(data, inputs = c(l_tax, l_quantity, l_partkey))
result <- as.data.frame(agg)

## result is equal number of possible values for l_partkey as given
## in the specifications of TPC-H
data <- Read(lineitem100g)
agg <- CountDistinct(data, inputs = l_partkey)
result <- as.data.frame(agg)
}
\author{
Jon Claus, <jonterainsights@gmail.com>, Tera Insights, LLC.
}
\seealso{
\code{\link{BloomFilter}} for a similar GLA.

\code{\link{BloomFilter}} for a similarly functioning GLA.
}

